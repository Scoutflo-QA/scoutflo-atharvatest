# Service for the server
apiVersion: v1
kind: Service
metadata:
  name: judge0-server
  namespace: default
  labels:
    app: judge0
    component: server
spec:
  selector:
    app: judge0
    component: server
  ports:
    - protocol: TCP
      port: 2358
      targetPort: 2358
  type: ClusterIP
---
# Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: judge0-server
  namespace: default
  labels:
    app: judge0
    component: server
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app: judge0
      component: server
  template:
    metadata:
      labels:
        app: judge0
        component: server
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z $POSTGRES_HOST $POSTGRES_PORT; do echo waiting for postgres; sleep 2; done;']
          env:
            - name: POSTGRES_HOST
              value: "db-postgresql-blr1-60847-do-user-16540921-0.i.db.ondigitalocean.com"
            - name: POSTGRES_PORT
              value: "25060"
      containers:
        - name: server
          image: satyamp07/judge0:latest
          command: ["/bin/bash"]
          args: 
            - "-c"
            - |
              set -e
              echo "Initializing Judge0 Server..."
              printenv
              echo "Running database migrations..."
              bundle exec rails db:migrate
              echo "Starting Rails server..."
              bundle exec rails server -p 2358 -b 0.0.0.0
          ports:
            - name: http
              containerPort: 2358
          resources:
            requests:
              memory: 512Mi
              cpu: 200m
            limits:
              memory: 1024Mi
              cpu: 400m
          readinessProbe:
            httpGet:
              path: /
              port: 2358
            initialDelaySeconds: 45
            periodSeconds: 15
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /
              port: 2358
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
          env:
            # Rails Environment
            - name: RAILS_ENV
              value: "production"
            - name: RAILS_MAX_THREADS
              value: "8"
            - name: RAILS_SERVER_PROCESSES
              value: "2"
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            # PostgreSQL Configuration
            - name: POSTGRES_HOST
              value: "db-postgresql-blr1-60847-do-user-16540921-0.i.db.ondigitalocean.com"
            - name: POSTGRES_PORT
              value: "25060"
            - name: POSTGRES_DB
              value: "defaultdb"
            - name: POSTGRES_USER
              value: "doadmin"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            # Redis Configuration
            - name: REDIS_SSL
              value: "true"
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: url
            # Judge0 Configuration
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: judge0-secrets
                  key: secret-key-base
            - name: MAINTENANCE_MESSAGE
              value: "Judge0 is under maintenance"
            - name: INTERVAL
              value: "0.1"
            - name: AUTHN_HEADER
              value: "X-Auth-Token"
            - name: AUTHZ_HEADER
              value: "X-Auth-User"
            - name: DISABLE_DATABASE_ENVIRONMENT_CHECK
              value: "1"
            - name: PORT
              value: "2358"
            - name: NEXT_PUBLIC_ATLAS_BACKEND
              value: "https://api.atlas.scoutflo.com/api"
      imagePullSecrets:
        - name: scoutflo-satyam-docker-the-latest-docker
---
# Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: judge0-worker
  namespace: default
  labels:
    app: judge0
    component: worker
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app: judge0
      component: worker
  template:
    metadata:
      labels:
        app: judge0
        component: worker
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z $POSTGRES_HOST $POSTGRES_PORT; do echo waiting for postgres; sleep 2; done;']
          env:
            - name: POSTGRES_HOST
              value: "db-postgresql-blr1-60847-do-user-16540921-0.i.db.ondigitalocean.com"
            - name: POSTGRES_PORT
              value: "25060"
      containers:
        - name: worker
          image: satyamp07/judge0:latest
          command: ["/bin/bash"]
          args: 
            - "-c"
            - |
              set -e
              echo "Initializing Judge0 Worker..."
              pwd
              ls -la /app
              ls -la /app/scripts
              printenv
              echo "Attempting to run workers..."
              if [ -f "/app/scripts/workers" ]; then
                chmod +x /app/scripts/workers
                /app/scripts/workers
              else
                echo "ERROR: Worker script not found!"
                exit 1
              fi
          resources:
            requests:
              memory: 1Gi
              cpu: 500m
            limits:
              memory: 2Gi
              cpu: 1000m
          env:
            # Rails Environment
            - name: RAILS_ENV
              value: "production"
            - name: RAILS_MAX_THREADS
              value: "8"
            - name: RAILS_SERVER_PROCESSES
              value: "2"
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            # PostgreSQL Configuration
            - name: POSTGRES_HOST
              value: "db-postgresql-blr1-60847-do-user-16540921-0.i.db.ondigitalocean.com"
            - name: POSTGRES_PORT
              value: "25060"
            - name: POSTGRES_DB
              value: "defaultdb"
            - name: POSTGRES_USER
              value: "doadmin"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            # Redis Configuration
            - name: REDIS_SSL
              value: "true"
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: url
            # Judge0 Configuration
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: judge0-secrets
                  key: secret-key-base
            - name: INTERVAL
              value: "0.1"
            - name: DISABLE_DATABASE_ENVIRONMENT_CHECK
              value: "1"
      imagePullSecrets:
        - name: scoutflo-satyam-docker-the-latest-docker
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: judge0-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: judge0-test-evx80.scoutflo.agency
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: judge0-server
                port:
                  number: 2358
  tls:
    - hosts:
        - judge0-test-evx80.scoutflo.agency
      secretName: scoutflo-agency-wildcard-tls